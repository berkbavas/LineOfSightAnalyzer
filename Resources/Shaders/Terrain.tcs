#version 450 core

// specify number of control points per patch output
// this value controls the size of the input and output arrays
layout(vertices = 4) out;

// varying input from vertex shader
in vec2 tcs_TextureCoords[];

// varying output to evaluation shader
out vec2 tes_TextureCoords[];

void main()
{
    // ----------------------------------------------------------------------
    // pass attributes through
    gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
    tes_TextureCoords[gl_InvocationID] = tcs_TextureCoords[gl_InvocationID];

    // ----------------------------------------------------------------------
    // invocation zero controls tessellation levels for the entire patch
    if (gl_InvocationID == 0)
    {
        gl_TessLevelOuter[0] = 16;
        gl_TessLevelOuter[1] = 16;
        gl_TessLevelOuter[2] = 16;
        gl_TessLevelOuter[3] = 16;

        gl_TessLevelInner[0] = 16;
        gl_TessLevelInner[1] = 16;
    }
}
